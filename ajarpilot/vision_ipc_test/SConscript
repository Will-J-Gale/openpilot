Import('env', 'arch', 'cereal', 'messaging', 'common', 'visionipc')

libs = [common, cereal, messaging,
        'zmq', 'capnp', 'kj', 'z',
        'avformat', 'avcodec', 'swscale', 'avutil',
        'yuv', 'OpenCL', 'pthread', visionipc]

src = [
  '#system/loggerd/logger.cc', 
  '#system/loggerd/video_writer.cc', 
  '#system/loggerd/encoder/encoder.cc', 
  '#system/loggerd/encoder/v4l_encoder.cc'
]

if arch != "larch64":
  src += ['#system/loggerd/encoder/ffmpeg_encoder.cc']

if arch == "Darwin":
  # fix OpenCL
  del libs[libs.index('OpenCL')]
  env['FRAMEWORKS'] = ['OpenCL']
  # exclude v4l
  del src[src.index('#system/loggerd/encoder/v4l_encoder.cc')]

logger_lib = env.Library('logger', src)
libs.insert(0, logger_lib)

env.Program('vision_ipc_test', ['main.cc', visionipc], LIBS=libs)